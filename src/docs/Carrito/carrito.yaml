paths:
  /api/carts:
    post:
      summary: Crea un nuevo Cart vacio
      operationId: createCart
      tags:
        - carts
      responses:
        '201':
          description: Cart creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/carts'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/carts/{_id}:
    get:
      summary: Obtiene un Cart con todos sus productos
      tags:
        - carts
      parameters:
        - name: _id
          in: path
          required: true
          description: ID del cart que se busca
          schema:
            $type: String
      responses:
        '200':
          description: Cart encontrado
          content:
            application/json:
              schema:
                $ref: '#components/schemas/getCartId'
    put:
      summary: Actualizar un carts a partir del ID
      tags:
        - carts
      parameters:
        - name: _id
          in: path
          required: true
          description: ID del cart que se busca
          schema:
            $type: String
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/updateCart'
      responses:
        '200':
          description: cart modificado exitosamente
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Success'
    delete:
      summary: elimina un cart por su ID
      tags:
        - carts
      operationId: deleteCart
      parameters:
        - name: _id
          in: path
          description: ID of cart to delete
          required: true
          schema:
            $type: String
      responses:
        '204':
          description: cart deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/carts/{_id}/product/{pid}:
    delete:
      summary: elimina un producto del cart por su ID
      tags:
        - carts
      operationId: deleteProductInCart
      parameters:
        - name: _id
          in: path
          description: Cart Id
          required: true
        - name: pid
          in: path
          description: Product Id to delete
          required: true
      responses:
        '204':
          description: product was removed from cart
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Agrega un producto al cart
      operationId: addProduct
      tags:
        - carts
      parameters:
        - name: _id
          in: path
          description: Cart Id
          required: true
          schema:
            $type: String
        - name: pid
          in: path
          description: Product Id to add
          required: true
          schema:
            $type: String
      responses:
        '201':
          description: producto agregado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productToCart'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: actualizar un carts a partir del ID
      tags:
        - carts
      parameters:
        - name: _id
          in: path
          description: Cart Id
          required: true
          schema:
            $type: String
        - name: pid
          in: path
          description: Product Id to add
          required: true
          schema:
            $type: String
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/newProduct'
      responses:
        '200':
          description: cart modificado exitosamente
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Success'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Success:
      type: object
      properties:
        status:
          type: String
          description: success or error
        code:
          type: Number
          description: c√≥digo de respuesta HTTP.
        data:
          type: Array
          description: array con la informacion de la peticion requerida
        msg:
          type: String
          description: aclarando que ocurrio
      example:
        status: Fail
        code: 404
        data: {}
        msg: Error createCart
    carts:
      type: object
      properties:
        _id:
          type: ObjectId
          description: ID auto generado by mongo
        products:
          type: Array
          description: Ids de los productos a comprar
      example:
        _id: ObjectId(644081a93f0625dc193bc594)
        products: []
    productToCart:
      type: object
      properties:
        _id:
          type: ObjectId
          description: ID auto generado by mongo
        products:
          type: Array
          description: Ids de los productos a comprar
      example:
        _id: ObjectId(644081a93f0625dc193bc594)
        products: [{ productId: '648a287a1df594f1632f89b2', quantity: 15, _id: '650143b0f1629e151fb3e2b8' }, { productId: '648a285ba30b968d68a653a8', quantity: 1, _id: '65025c361d295af7fa52dd40' }]
    getCartId:
      type: object
      properties:
        _id:
          type: ObjectId
          description: ID auto generado by mongo
        products:
          type: Array
          description: Ids de los productos a comprar
      example:
        products: Array
        0: Object
        productId: ObjectId(648a287a1df594f1632f89b2)
        quantity: 5
        _id: ObjectId(64d133d0d80ee1946b5c630a)
  requestBodies:
    newProduct:
      type: object
      required:
        - quantity
      properties:
        quantity:
          type: Number
          description: cantidad de Unidades
    updateCart:
      type: object
      properties:
        _id:
          type: ObjectId
          description: ID auto generado by mongo
        products:
          type: Array
          description: Ids de los productos a comprar
      example:
        products: [{ _id: '648a287a1df594f1632f89b2', quantity: 10 }]
  Error:
    type: object
    required:
      - id
    properties:
      id:
        type: ObjectId
