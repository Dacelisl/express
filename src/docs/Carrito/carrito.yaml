paths:
  /api/carts:
    post:
      description: Crea un nuevo Cart vacio
      operationId: createCart
      tags:
        - cart
      responses:
        '201':
          description: Cart creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/carts'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/carts/{_id}:
    get:
      description: Obtiene un producto por su ID
      tags:
        - carts
      parameters:
        - name: _id
          in: path
          required: true
          description: ID del usuario que se busca
          schema:
            $type: String
      responses:
        '200':
          description: Usuario encontrado
          content:
            application/json:
              schema:
                $ref: '#components/schemas/carts'
    put:
      summary: Actualizar un carts a partir del ID
      tags:
        - carts
      parameters:
        - name: _id
          in: path
          required: true
          description: ID del usuario que se busca
          schema:
            $type: String
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/updatecarts'
      responses:
        '200':
          description: Usuario modificado exitosamente
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Success'
    delete:
      description: elimina un producto por su ID
      operationId: deleteProduct
      parameters:
        - name: _id
          in: path
          description: ID of product to delete
          required: true
      responses:
        '204':
          description: product deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Success:
      type: object
      properties:
        status:
          type: String
          description: success or error
        message:
          type: String
          description: aclarando que ocurrio
      example:
        status: success
        message: carts updated
    carts:
      type: object
      properties:
        _id:
          type: ObjectId
          description: ID auto generado by mongo
        products:
          type: Array
          description: Ids de los productos a comprar
      example:
        _id: ObjectId("644081a93f0625dc193bc594")
        products: []
  requestBodies:
    updatecarts:
      type: object
      properties:
        title:
          type: String
          description: Nombre del producto
        description:
          type: String
          description: Descripcion breve del producto
        category:
          type: String
          description: Categoria del producto
        price:
          type: String
          description: Precio del producto
        thumbnail:
          type: String
          description: Imagen del producto
        code:
          type: String
          description: Codigo unico del producto
        owner:
          type: String
          description: Email del propietario del producto
        stock:
          type: Number
          description: Unidades totales disponibles
      example:
        title: 'Salad'
        description: 'The beautiful range of Apple Naturalé that has an exciting mix of natu…'
        category: 'Baby'
        price: '$550'
        thumbnail: 'insight_schedule_bloop.jpg'
        code: '1oOXBRaLHw'
        owner: atrian@gmail.com
        stock: 15
  Error:
    type: object
    required:
      - id
    properties:
      id:
        type: ObjectId
